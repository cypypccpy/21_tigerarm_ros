======================================
新世纪TigerArm展望
======================================

前面介绍的那些，远远不是TigerArm的全部。事实上，除了基本的能够满足使用需求的功能外，我们还给他添加了许多功能，只是没有完全集成在TigerArm系统中而已，
很多单拿出来都是能制作一个小Demo的程度，比如Collision detection，3D Perception，Task Planning，SLAM等。其实这些很多都在MoveIt!里面有很好的支持，可以轻松集成进我们的系统中。

这些先不谈，我们回到TigerArm与MoveIt!本身，下面对于这个系统还待优化的大的方向做个简短的总结


- 速度的调整过于强行，详情参考 **如何对TigerArm进行优化** 章节，十足十的不科学

- 对于Pipeline的执念，这部分我建议通过 ``move_group->AsyncExeute()`` 来实现，不建议用官方文档里的 ``planning_scene`` ，因为这样需要大改，而用 ``move_group`` 也能达到一样的效果。

- 我希望能找到一个方法，能够直接计算出轨迹点的逆解，这会对离线规划有莫大的帮助。目前来说MoveIt!中的IK也是通过插件的方式调用的，所以我短时间内也没找到办法